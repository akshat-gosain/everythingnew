$date
	Fri Mar 29 21:35:53 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module ripple_carry_4_bit_adder_tb $end
$var wire 4 ! Sum [3:0] $end
$var wire 1 " C4 $end
$var reg 1 # C0 $end
$var reg 4 $ x [3:0] $end
$var reg 4 % y [3:0] $end
$scope module dut $end
$var wire 4 & A [3:0] $end
$var wire 4 ' B [3:0] $end
$var wire 1 # C0 $end
$var wire 4 ( Sum [3:0] $end
$var wire 1 " C4 $end
$var wire 1 ) C3 $end
$var wire 1 * C2 $end
$var wire 1 + C1 $end
$scope module FA0 $end
$var wire 1 + C $end
$var wire 1 , x $end
$var wire 1 - y $end
$var wire 1 # z $end
$var wire 1 . S1 $end
$var wire 1 / S $end
$var wire 1 0 C2 $end
$var wire 1 1 C1 $end
$scope module HA1 $end
$var wire 1 1 C $end
$var wire 1 . S $end
$var wire 1 , x $end
$var wire 1 - y $end
$upscope $end
$scope module HA2 $end
$var wire 1 0 C $end
$var wire 1 / S $end
$var wire 1 . x $end
$var wire 1 # y $end
$upscope $end
$upscope $end
$scope module FA1 $end
$var wire 1 * C $end
$var wire 1 2 x $end
$var wire 1 3 y $end
$var wire 1 + z $end
$var wire 1 4 S1 $end
$var wire 1 5 S $end
$var wire 1 6 C2 $end
$var wire 1 7 C1 $end
$scope module HA1 $end
$var wire 1 7 C $end
$var wire 1 4 S $end
$var wire 1 2 x $end
$var wire 1 3 y $end
$upscope $end
$scope module HA2 $end
$var wire 1 6 C $end
$var wire 1 5 S $end
$var wire 1 4 x $end
$var wire 1 + y $end
$upscope $end
$upscope $end
$scope module FA2 $end
$var wire 1 ) C $end
$var wire 1 8 x $end
$var wire 1 9 y $end
$var wire 1 * z $end
$var wire 1 : S1 $end
$var wire 1 ; S $end
$var wire 1 < C2 $end
$var wire 1 = C1 $end
$scope module HA1 $end
$var wire 1 = C $end
$var wire 1 : S $end
$var wire 1 8 x $end
$var wire 1 9 y $end
$upscope $end
$scope module HA2 $end
$var wire 1 < C $end
$var wire 1 ; S $end
$var wire 1 : x $end
$var wire 1 * y $end
$upscope $end
$upscope $end
$scope module FA3 $end
$var wire 1 " C $end
$var wire 1 > x $end
$var wire 1 ? y $end
$var wire 1 ) z $end
$var wire 1 @ S1 $end
$var wire 1 A S $end
$var wire 1 B C2 $end
$var wire 1 C C1 $end
$scope module HA1 $end
$var wire 1 C C $end
$var wire 1 @ S $end
$var wire 1 > x $end
$var wire 1 ? y $end
$upscope $end
$scope module HA2 $end
$var wire 1 B C $end
$var wire 1 A S $end
$var wire 1 @ x $end
$var wire 1 ) y $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
b0 (
b0 '
b0 &
b0 %
b0 $
0#
0"
b0 !
$end
#10
b10 !
b10 (
15
1+
11
1-
1,
b1 %
b1 '
b1 $
b1 &
#20
1"
1B
1)
1<
1*
05
16
0;
b0 !
b0 (
0A
14
1:
1@
12
18
1>
b1111 $
b1111 &
#30
13
19
1?
02
08
0>
b1111 %
b1111 '
b1 $
b1 &
#40
15
06
1;
0<
1A
0B
04
17
0:
1=
0@
1C
b1111 !
b1111 (
1/
12
18
1>
1#
b1111 $
b1111 &
#50
0;
0*
0+
0A
1B
1"
14
07
01
1@
0C
0-
03
0,
0>
b10 !
b10 (
0/
b1100 %
b1100 '
b110 $
b110 &
0#
#60
1;
0)
b110 !
b110 (
0A
0B
1:
0=
0@
1C
09
1>
b1000 %
b1000 '
b1110 $
b1110 &
#70
1B
05
1*
1;
1)
1/
b101 !
b101 (
0A
1"
04
17
0:
1=
1.
1@
0C
13
19
1,
0>
b1110 %
b1110 '
b111 $
b111 &
#80
0"
0;
1A
0B
b1011 !
b1011 (
15
0*
0)
14
07
0=
1-
03
09
0,
08
b1001 %
b1001 '
b10 $
b10 &
#90
